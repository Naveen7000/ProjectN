function toEasternTimeWithCustomDate(input) {
  // 1. Get the input date (in UTC, ignoring local timezone)
  let year, month, day;

  if (typeof input === 'string') {
    const [mm, dd, yyyy] = input.split('/');
    year = parseInt(yyyy, 10);
    month = parseInt(mm, 10) - 1; // JS months are 0-based
    day = parseInt(dd, 10);
  } else if (input instanceof Date) {
    year = input.getUTCFullYear();
    month = input.getUTCMonth();
    day = input.getUTCDate();
  } else {
    throw new Error('Input must be a Date object or mm/dd/yyyy string');
  }

  // 2. Get the current ET time
  const now = new Date();
  const etFormatter = new Intl.DateTimeFormat('en-US', {
    timeZone: 'America/New_York',
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit',
    hour12: false,
  });

  const parts = Object.fromEntries(
    etFormatter.formatToParts(now).map(({ type, value }) => [type, value])
  );

  const hour = parseInt(parts.hour, 10);
  const minute = parseInt(parts.minute, 10);
  const second = parseInt(parts.second, 10);

  // 3. Construct a Date object that represents ET date + ET time in UTC
  const utcDate = new Date(Date.UTC(year, month, day, hour, minute, second));
  return utcDate;
}
